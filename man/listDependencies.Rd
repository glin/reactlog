% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/list-dependencies.R
\name{listDependencies}
\alias{listDependencies}
\title{List reactive dependencies}
\usage{
listDependencies(x = getCurrentContext(), graph = getReactGraph(),
  invalidated = FALSE, depth = NULL, status = TRUE, value = FALSE,
  srcref = FALSE, quiet = FALSE, file = "", append = FALSE)
}
\arguments{
\item{x}{A reactive context, expression, observer. Defaults to the
current reactive context.}

\item{graph}{A reactive graph. Defaults to the reactive graph for the
current Shiny session.}

\item{invalidated}{If \code{TRUE}, get the last invalidated context.}

\item{depth}{Max depth of the dependency tree to display.}

\item{status}{If \code{TRUE}, show status markers.}

\item{value}{If \code{TRUE}, show values of reactive values.}

\item{srcref}{If \code{TRUE}, show source references.}

\item{quiet}{If \code{TRUE}, suppress output.}

\item{file}{A filename or connection to print to. Defaults to \code{stdout}.}

\item{append}{If \code{TRUE}, output will be appended to \code{file}.}
}
\value{
A nested list of dependencies.
}
\description{
Shows a tree view of reactive dependencies.
}
\examples{
library(shiny)
options(shiny.reactlog = TRUE)

valA <- reactiveVal(1, label = "valA")
valB <- reactiveVal(2, label = "valB")

rxA <- reactive({
  valA()
})

rxB <- reactive({
  valB()
})

rxAB <- reactive({
  valA() + valB()
})

obs <- observe({
  listDependencies()
  rxA() + rxB() + rxAB()
}, label = "obs")

observe(valA(3))

# trigger flush event (happens automatically in a Shiny app)
shiny:::flushReact()

listDependencies(obs, depth = 0, srcref = TRUE)

\dontrun{
# show the entire dependency tree
listDependencies()
}
}
\seealso{
\code{\link[=traceInvalidation]{traceInvalidation()}}
}
