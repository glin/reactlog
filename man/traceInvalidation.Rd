% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trace-invalidation.R
\name{traceInvalidation}
\alias{traceInvalidation}
\title{Print the call stack that caused invalidation}
\usage{
traceInvalidation(x = getCurrentContext(), graph = getReactGraph(), n = 1,
  value = TRUE, quiet = FALSE, file = "", append = FALSE)
}
\arguments{
\item{x}{A reactive context, expression, observer. Defaults to the
current reactive context.}

\item{graph}{A reactive graph. Defaults to the reactive graph for the
current Shiny session.}

\item{n}{Number of invalidations to trace back.
Defaults to 1, the most recent invalidation.}

\item{value}{If \code{TRUE}, show changed values of reactive values.}

\item{quiet}{If \code{TRUE}, suppress output.}

\item{file}{A filename or connection to print to. Defaults to \code{stdout}.}

\item{append}{If \code{TRUE}, output will be appended to \code{file}.}
}
\value{
A list (stack) of reactive graph nodes.
}
\description{
Prints the call stack that caused a reactive context to be invalidated.
The most recent call is printed first.
}
\examples{
library(shiny)
options(shiny.reactlog = TRUE)

val <- reactiveVal(1, label = "val")

rx <- reactive({
  val()
})

observe({
  traceInvalidation()
  rx()
})

observe(val(10))

# trigger flush event (happens automatically in a Shiny app)
shiny:::flushReact()

traceInvalidation(rx)
}
\seealso{
\code{\link[=listDependencies]{listDependencies()}}
}
